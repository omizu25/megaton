//**************************************************
// 
// locus.cpp
// Author  : katsuki mizuki
// 
//**************************************************

//==================================================
// インクルード
//==================================================
#include "locus.h"
#include "application.h"
#include "effect.h"
#include <assert.h>

//==================================================
// 定義
//==================================================
const float CLocus::STD_SIZE = 0.0f;

//--------------------------------------------------
// 生成
//--------------------------------------------------
CLocus* CLocus::Create()
{
	CLocus* pLocus = nullptr;

	pLocus = new CLocus;

	if (pLocus != nullptr)
	{// nullチェック
		pLocus->Init();
	}

	return pLocus;
}

//--------------------------------------------------
// デフォルトコンストラクタ
//--------------------------------------------------
CLocus::CLocus()
{
	m_move = D3DXVECTOR3(0.0f, 0.0f, 0.0f);		// 移動量
	m_fWave = 0.0f;								// 波
	m_fSpeed = 0.0f;							// 速度
	m_fWaveSpeed = 0.0f;						// 波の加算量
	m_fWaveWidth = 0.0f;						// 波の倍率
	m_nLife = 0;								// 寿命
}

//--------------------------------------------------
// デストラクタ
//--------------------------------------------------
CLocus::~CLocus()
{
}

//--------------------------------------------------
// 初期化
//--------------------------------------------------
void CLocus::Init()
{
	// 初期化
	CObject3D::Init();

	// サイズの設定
	CObject3D::SetSize(D3DXVECTOR3(STD_SIZE, STD_SIZE, 0.0f));

	// 速度の設定
	m_fSpeed = 1.0f;

	// 波の加算量
	m_fWaveSpeed = 0.01f;

	// 波の倍率
	m_fWaveWidth = 1.0f;

	// 寿命
	m_nLife = 300;
}

//--------------------------------------------------
// 終了
//--------------------------------------------------
void CLocus::Uninit()
{
	// 終了
	CObject3D::Uninit();
}

//--------------------------------------------------
// 更新
//--------------------------------------------------
void CLocus::Update()
{
	// 移動量の設定
	m_fWave += m_fWaveSpeed;
	m_move.x = sinf(m_fWave) * m_fWaveWidth;
	m_move.y = cosf(0.0f) * m_fSpeed;

	// 移動
	SetPos(GetPos() + m_move);

	// 更新
	CObject3D::Update();

	CEffect::Create(GetPos(), D3DXVECTOR3(0.0f, 0.0f, 0.0f), D3DXCOLOR(1.0f, 0.5f, 0.0f, 1.0f));

	m_nLife--;

	if (m_nLife <= 0)
	{
		m_nLife = 0;
		CObject::Release();
	}
}

//--------------------------------------------------
// 描画
//--------------------------------------------------
void CLocus::Draw()
{
	// 描画
	CObject3D::Draw();
}
